/**!  BackTalk Grid System
*     by Cody Byrnes
*
*/
/*
* Usage:
* <div class="container"> //Required
* 	<div class="span-1 columns"> //Defines the amount of columns to span across
*	</div>
*</div>
*
*
* Grid unit syntax:
* .span-"Number of Column units to span"
* e.g. .span-1 for a single Column unit
*
*
* Customization:
* $full_width:   //Changes the total width of the container
* 			         //and determines the size of the columns
*
* $margin_space: //Changes the total margin space 
*					       //of both sides of the grid units
*
* $cols          //Determines the number of columns 
*
*/ 
$full_width:960px;
$margin_space:20;
$cols:16;
//Breakpoint Definitions 
$tablet_portrait_size:768px;
$all_mobile_size: $tablet_portrait_size - 1;
$phone_landscape_size:480px;
$phone_portrait_size: $phone_landscape_size - 1;
//Mobile Columns Sizes 
$phone_landscape_col:420px;
$phone_portrait_col:300px;


//Sets the margin space for each Side of the columns unit 
@mixin margins{
	margin-left:#{$margin_space/2}px;
  margin-right:#{$margin_space/2}px;
}

//Media calls made as a mixin
@mixin respond-to($media) {
  @if $media == phone_portrait {
    @media only screen and (max-width: $phone_portrait_size) { @content; }
  }
  @else if $media == phone_landscape {
    @media only screen and (min-width: $phone_landscape_size) and (max-width: $all_mobile_size) { @content; }
  }
  @else if $media == all_mobile {
    @media only screen and (max-width: $all_mobile_size) { @content; }
  }
  @else if $media == tablet_portrait {
    @media only screen and (min-width: $tablet_portrait_size) and (max-width: $full_width - 1) { @content; }
  }
  @else if $media == desktop {
    @media only screen and (min-width: $full_width) { @content; }
  }
}

.container{
	width:$full_width;
	margin:auto;
	@include respond-to(desktop) {widows: #{$full_width}}
	@include respond-to(tablet_portrait) {width: #{$tablet_portrait_size}}
	@include respond-to(phone_landscape) {width: #{$phone_landscape_size}}
	@include respond-to(phone_portrait) {width: 320px;}
}
.columns{
	@include margins;
	@include respond-to(all_mobile){float:none;margin-left:auto;margin-right:auto;}
	float:left;
}
.alpha{
	@include respond-to(desktop){margin-right:#{$margin_space}px !important;}
	@include respond-to(tablet_portrait){margin-right: #{$margin_space}px !important;}
}
.omega{
	
	@include respond-to(desktop){margin-left: #{$margin_space}px !important;}
	@include respond-to(tablet_portrait){margin-left:#{$margin_space}px !important;}
}
@for $i from 1 through $cols {
	$col_width: $full_width/$cols*$i  -  $margin_space;
  .container .span-#{$i}.columns {
  		width: #{$col_width};
  		@include respond-to(phone_portrait) { 
          width: #{$phone_portrait_col};
  		}
  		@include respond-to(phone_landscape) { 
           width: #{$phone_landscape_col};
  		}
  		@include respond-to(tablet_portrait) {
  				$col_width: $tablet_portrait_size/$cols*$i  -  $margin_space;
  			  width: #{$col_width};
  		}
  }
}